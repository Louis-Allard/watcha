{"ast":null,"code":"import _toConsumableArray from \"/home/louis/Desktop/Projet2/lille-0219-js-projet2-moviedb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/louis/Desktop/Projet2/lille-0219-js-projet2-moviedb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/louis/Desktop/Projet2/lille-0219-js-projet2-moviedb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/louis/Desktop/Projet2/lille-0219-js-projet2-moviedb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/louis/Desktop/Projet2/lille-0219-js-projet2-moviedb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/louis/Desktop/Projet2/lille-0219-js-projet2-moviedb/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/louis/Desktop/Projet2/lille-0219-js-projet2-moviedb/src/components/Gallery.jsx\";\nimport React, { Component } from 'react';\nimport Data from \"./Data\";\nimport Movie from \"./Movie\";\n\nvar Gallery =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Gallery, _Component);\n\n  function Gallery(props) {\n    var _this;\n\n    _classCallCheck(this, Gallery);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Gallery).call(this, props));\n\n    _this.handleScroll = function () {\n      _this.upPageNumber();\n    };\n\n    _this.upPageNumber = function () {\n      if (Date.now() - _this.state.lastCall > 1000) {\n        _this.setState({\n          page: _this.state.page + 1,\n          lastCall: Date.now()\n        }, function () {\n          _this.getData();\n        });\n      }\n    };\n\n    _this.state = {\n      movies: [],\n      page: 1,\n      lastCall: 0\n    };\n    return _this;\n  }\n\n  _createClass(Gallery, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n      window.addEventListener('scroll', this.handleScroll);\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      if (this.props.match.params.id === '0') {\n        var filteredData = Data.filter(function (gallery) {\n          if (gallery.type === _this2.props.match.params.galleryName) {\n            return true;\n          }\n\n          return false;\n        });\n        var Theurl = filteredData[0].url;\n        fetch(Theurl + \"\".concat(this.state.page)).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          var newList = [].concat(_toConsumableArray(_this2.state.movies), _toConsumableArray(data.results));\n\n          _this2.setState({\n            movies: newList\n          });\n        });\n      } else {\n        fetch(\"https://api.themoviedb.org/3/discover/movie?api_key=1092ee57947c8bdfc25a5a0641ecb8ec&with_genres= \".concat(this.props.match.params.id, \"&page=\").concat(this.state.page)).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          var newList = [].concat(_toConsumableArray(_this2.state.movies), _toConsumableArray(data.results));\n\n          _this2.setState({\n            movies: newList\n          });\n        });\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        onScroll: function onScroll() {\n          _this3.upPageNumber();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title-cat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.props.match.params.galleryName), React.createElement(\"div\", {\n        className: \"gallery-type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.movies.map(function (film, idx) {\n        return React.createElement(\"div\", {\n          className: \"m-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(Movie, {\n          key: idx,\n          cle: film.id,\n          image: \"https://image.tmdb.org/t/p/w500\" + film.poster_path,\n          genres: film.genre_ids,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return Gallery;\n}(Component);\n\n;\nexport default Gallery;","map":{"version":3,"sources":["/home/louis/Desktop/Projet2/lille-0219-js-projet2-moviedb/src/components/Gallery.jsx"],"names":["React","Component","Data","Movie","Gallery","props","handleScroll","upPageNumber","Date","now","state","lastCall","setState","page","getData","movies","window","addEventListener","match","params","id","filteredData","filter","gallery","type","galleryName","Theurl","url","fetch","then","response","json","data","newList","results","map","film","idx","poster_path","genre_ids"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Data from \"./Data\";\nimport Movie from \"./Movie\"\n\nclass Gallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      page: 1,\n      lastCall: 0\n    };\n  };\n  componentDidMount() {\n    this.getData();\n    window.addEventListener('scroll', this.handleScroll);\n  };\n  handleScroll = () => {\n    this.upPageNumber();\n  };\n  getData() {\n    if (this.props.match.params.id === '0') {\n      const filteredData = Data.filter((gallery) => {\n        if (gallery.type === this.props.match.params.galleryName) {\n          return true;\n        }\n        return false;\n      })\n      const Theurl = filteredData[0].url\n      fetch(Theurl + `${this.state.page}`)\n        .then(response => response.json())\n        .then(data => {\n          let newList = [...this.state.movies, ...data.results];\n          this.setState({\n            movies: newList\n          });\n        });\n    }\n    else {\n      fetch(`https://api.themoviedb.org/3/discover/movie?api_key=1092ee57947c8bdfc25a5a0641ecb8ec&with_genres= ${this.props.match.params.id}&page=${this.state.page}`)\n        .then(response => response.json())\n        .then(data => {\n          let newList = [...this.state.movies, ...data.results];\n          this.setState({\n            movies: newList\n          });\n        });\n    };\n  };\n  upPageNumber = () => {\n    if (Date.now() - this.state.lastCall > 1000) {\n      this.setState({\n        page: this.state.page + 1,\n        lastCall: Date.now()\n      }, () => {\n        this.getData();\n      });\n    }\n  };\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\" onScroll={() => { this.upPageNumber() }}>\n          <h2 className=\"title-cat\">{this.props.match.params.galleryName}</h2>\n          <div className=\"gallery-type\">\n            {this.state.movies.map((film, idx) => {\n              return (\n                <div className=\"m-1\">\n                  <Movie\n                    key={idx}\n                    cle={film.id}\n                    image={\"https://image.tmdb.org/t/p/w500\" + film.poster_path}\n                    genres={film.genre_ids}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default Gallery;"]},"metadata":{},"sourceType":"module"}